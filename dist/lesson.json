{"type":"entity","name":"tsParticles_Integration_Lesson","entityType":"lesson","observations":["When integrating tsParticles with React, version compatibility is crucial","For React 19.0.0, the legacy packages (v2.12.x) work better than the latest v3.x.x","The correct package combination is: react-tsparticles@2.12.2, tsparticles@2.12.0, and tsparticles-engine@2.12.0","Using the latest @tsparticles/* packages can cause type mismatches and prop validation errors","The 'init' prop should be used instead of 'particlesInit' in v2.12.x","Always check the peer dependencies and version compatibility before upgrading to newer versions"]}
{"type":"entity","name":"NEXTJS_BUILD_ERROR_001","entityType":"lesson","observations":["Error occurs during Next.js build process","Related to missing dependencies in package.json","Common in Windows environments"],"errorPattern":{"type":"build","message":"Error: Cannot find module '@next/swc-win32-x64-msvc'","context":"next build command execution","stackTrace":"Error: Cannot find module '@next/swc-win32-x64-msvc'\n    at Module._resolveFilename (node:internal/modules/cjs/loader:1075:15)"},"metadata":{"severity":"high","environment":{"os":"win32","nodeVersion":"18.x","dependencies":{"next":"13.x"}},"successRate":1,"createdAt":"2025-02-13T13:21:58.523Z","updatedAt":"2025-02-13T13:22:21.336Z","frequency":1},"verificationSteps":[{"command":"pnpm add @next/swc-win32-x64-msvc","expectedOutput":"Package installed successfully","successIndicators":["added @next/swc-win32-x64-msvc"]}]}
{"type":"entity","name":"NEXTJS_API_ERROR_001","entityType":"lesson","observations":["Error occurs when API routes fail to load","Related to incorrect API route configuration","Common in development environment"],"errorPattern":{"type":"runtime","message":"API resolved without sending a response","context":"next dev server execution"},"metadata":{"severity":"medium","environment":{"os":"win32","nodeVersion":"18.x","dependencies":{"next":"13.x"}},"successRate":0,"createdAt":"2025-02-13T13:24:29.127Z","updatedAt":"2025-02-13T13:24:29.127Z"},"verificationSteps":[{"command":"Check API route handler","expectedOutput":"Response sent successfully","successIndicators":["res.status().json() called","res.end() called"]}]}
{"type":"entity","name":"NEXTJS_API_ERROR_002","entityType":"lesson","observations":["Error occurs in Next.js API routes","Related to missing response handling","Common in development environment","Requires proper response sending"],"errorPattern":{"type":"runtime","message":"API resolved without sending a response","context":"next dev server API route"},"metadata":{"severity":"medium","environment":{"os":"win32","nodeVersion":"18.x","dependencies":{"next":"13.x"}},"successRate":1,"createdAt":"2025-02-13T13:26:51.850Z","updatedAt":"2025-02-13T13:27:05.177Z","frequency":1},"verificationSteps":[{"command":"Check API route handler","expectedOutput":"Response sent successfully","successIndicators":["res.status().json() called","res.end() called"]},{"command":"curl http://localhost:3000/api/test","expectedOutput":"Response received","successIndicators":["HTTP 200","Response body present"]}]}
{"type":"entity","name":"LESSON_SYSTEM_IMPLEMENTATION_001","entityType":"lesson","observations":["Implementing a lesson learning system requires careful type handling and validation","Error patterns need to be structured consistently for effective matching","Success rate tracking requires proper initialization of metadata","Type guards are essential for TypeScript type safety","Verification steps should be comprehensive and testable","Search functionality needs to handle partial matches effectively"],"errorPattern":{"type":"implementation","message":"Type checking issues in findSimilarErrors and getLessonRecommendations methods","context":"lesson learning system implementation","stackTrace":"Error: Cannot read properties of undefined (reading 'type')"},"metadata":{"severity":"high","environment":{"os":"win32","nodeVersion":"18.x","dependencies":{"typescript":"^5.0.0","@modelcontextprotocol/sdk":"latest"}},"createdAt":"2025-02-13T13:28:33.305Z","updatedAt":"2025-02-13T13:29:21.959Z","frequency":1,"successRate":1},"verificationSteps":[{"command":"Check LessonEntity interface","expectedOutput":"Interface properly extends Entity with required fields","successIndicators":["errorPattern field present","metadata field present","verificationSteps field present"]},{"command":"Verify type guards in filter functions","expectedOutput":"Type-safe filtering of lesson entities","successIndicators":["entityType check present","Partial<LessonEntity> casting used","undefined checks for optional fields"]},{"command":"Test metadata initialization","expectedOutput":"Proper metadata initialization in createLesson","successIndicators":["createdAt timestamp set","updatedAt timestamp set","frequency initialized to 0","successRate initialized to 0"]},{"command":"Test success rate calculation","expectedOutput":"Accurate success rate updates","successIndicators":["Previous rate considered","Frequency incremented","New success rate calculated correctly"]},{"command":"Test error pattern matching","expectedOutput":"Effective similar error finding","successIndicators":["Type matching works","Partial message matching works","Context matching works"]},{"command":"Validate lesson creation","expectedOutput":"All required fields validated","successIndicators":["Name uniqueness checked","Required fields validated","Error pattern fields validated","Verification steps validated"]}]}
{"type":"entity","name":"LESSON_TYPE_CHECKING_001","entityType":"lesson","observations":["Type checking issues often occur when handling optional fields","Using Partial<T> helps with type safety when dealing with potentially incomplete objects","Type guards should be comprehensive to ensure runtime safety","Proper interface design reduces type checking complexity","Initialization of optional fields prevents undefined access errors"],"errorPattern":{"type":"typescript","message":"Object is possibly undefined or null when accessing properties","context":"type checking in filter functions"},"metadata":{"severity":"high","environment":{"os":"win32","nodeVersion":"18.x","dependencies":{"typescript":"^5.0.0"}},"successRate":1,"createdAt":"2025-02-13T13:29:05.864Z","updatedAt":"2025-02-13T14:40:00.883Z","frequency":1},"verificationSteps":[{"command":"Add type guard","expectedOutput":"Type-safe entity filtering","successIndicators":["if (e.entityType !== 'lesson') return false","const lessonEntity = e as Partial<LessonEntity>","lessonEntity.errorPattern !== undefined"]},{"command":"Add null checks","expectedOutput":"Safe property access","successIndicators":["Optional chaining used (?.)","Nullish coalescing used (??)","Default values provided"]},{"command":"Initialize optional fields","expectedOutput":"Proper field initialization","successIndicators":["metadata initialized if undefined","Default values set for required fields","Type assertions properly used"]},{"command":"Test type safety","expectedOutput":"No TypeScript errors","successIndicators":["No type errors in IDE","Successful compilation","Runtime errors prevented"]}]}
{"type":"entity","name":"tsParticles_Integration_Lesson","entityType":"lesson","observations":["When integrating tsParticles with React, version compatibility is crucial","For React 19.0.0, the legacy packages (v2.12.x) work better than the latest v3.x.x","The correct package combination is: react-tsparticles@2.12.2, tsparticles@2.12.0, and tsparticles-engine@2.12.0","Using the latest @tsparticles/* packages can cause type mismatches and prop validation errors","The 'init' prop should be used instead of 'particlesInit' in v2.12.x","Always check the peer dependencies and version compatibility before upgrading to newer versions"]}
{"type":"entity","name":"NEXTJS_BUILD_ERROR_001","entityType":"lesson","observations":["Error occurs during Next.js build process","Related to missing dependencies in package.json","Common in Windows environments"],"errorPattern":{"type":"build","message":"Error: Cannot find module '@next/swc-win32-x64-msvc'","context":"next build command execution","stackTrace":"Error: Cannot find module '@next/swc-win32-x64-msvc'\n    at Module._resolveFilename (node:internal/modules/cjs/loader:1075:15)"},"metadata":{"severity":"high","environment":{"os":"win32","nodeVersion":"18.x","dependencies":{"next":"13.x"}},"successRate":1,"createdAt":"2025-02-13T13:21:58.523Z","updatedAt":"2025-02-13T13:22:21.336Z","frequency":1},"verificationSteps":[{"command":"pnpm add @next/swc-win32-x64-msvc","expectedOutput":"Package installed successfully","successIndicators":["added @next/swc-win32-x64-msvc"]}]}
{"type":"entity","name":"NEXTJS_API_ERROR_001","entityType":"lesson","observations":["Error occurs when API routes fail to load","Related to incorrect API route configuration","Common in development environment"],"errorPattern":{"type":"runtime","message":"API resolved without sending a response","context":"next dev server execution"},"metadata":{"severity":"medium","environment":{"os":"win32","nodeVersion":"18.x","dependencies":{"next":"13.x"}},"successRate":0,"createdAt":"2025-02-13T13:24:29.127Z","updatedAt":"2025-02-13T13:24:29.127Z"},"verificationSteps":[{"command":"Check API route handler","expectedOutput":"Response sent successfully","successIndicators":["res.status().json() called","res.end() called"]}]}
{"type":"entity","name":"NEXTJS_API_ERROR_002","entityType":"lesson","observations":["Error occurs in Next.js API routes","Related to missing response handling","Common in development environment","Requires proper response sending"],"errorPattern":{"type":"runtime","message":"API resolved without sending a response","context":"next dev server API route"},"metadata":{"severity":"medium","environment":{"os":"win32","nodeVersion":"18.x","dependencies":{"next":"13.x"}},"successRate":1,"createdAt":"2025-02-13T13:26:51.850Z","updatedAt":"2025-02-13T13:27:05.177Z","frequency":1},"verificationSteps":[{"command":"Check API route handler","expectedOutput":"Response sent successfully","successIndicators":["res.status().json() called","res.end() called"]},{"command":"curl http://localhost:3000/api/test","expectedOutput":"Response received","successIndicators":["HTTP 200","Response body present"]}]}
{"type":"entity","name":"LESSON_SYSTEM_IMPLEMENTATION_001","entityType":"lesson","observations":["Implementing a lesson learning system requires careful type handling and validation","Error patterns need to be structured consistently for effective matching","Success rate tracking requires proper initialization of metadata","Type guards are essential for TypeScript type safety","Verification steps should be comprehensive and testable","Search functionality needs to handle partial matches effectively"],"errorPattern":{"type":"implementation","message":"Type checking issues in findSimilarErrors and getLessonRecommendations methods","context":"lesson learning system implementation","stackTrace":"Error: Cannot read properties of undefined (reading 'type')"},"metadata":{"severity":"high","environment":{"os":"win32","nodeVersion":"18.x","dependencies":{"typescript":"^5.0.0","@modelcontextprotocol/sdk":"latest"}},"createdAt":"2025-02-13T13:28:33.305Z","updatedAt":"2025-02-13T13:29:21.959Z","frequency":1,"successRate":1},"verificationSteps":[{"command":"Check LessonEntity interface","expectedOutput":"Interface properly extends Entity with required fields","successIndicators":["errorPattern field present","metadata field present","verificationSteps field present"]},{"command":"Verify type guards in filter functions","expectedOutput":"Type-safe filtering of lesson entities","successIndicators":["entityType check present","Partial<LessonEntity> casting used","undefined checks for optional fields"]},{"command":"Test metadata initialization","expectedOutput":"Proper metadata initialization in createLesson","successIndicators":["createdAt timestamp set","updatedAt timestamp set","frequency initialized to 0","successRate initialized to 0"]},{"command":"Test success rate calculation","expectedOutput":"Accurate success rate updates","successIndicators":["Previous rate considered","Frequency incremented","New success rate calculated correctly"]},{"command":"Test error pattern matching","expectedOutput":"Effective similar error finding","successIndicators":["Type matching works","Partial message matching works","Context matching works"]},{"command":"Validate lesson creation","expectedOutput":"All required fields validated","successIndicators":["Name uniqueness checked","Required fields validated","Error pattern fields validated","Verification steps validated"]}]}
{"type":"entity","name":"LESSON_TYPE_CHECKING_001","entityType":"lesson","observations":["Type checking issues often occur when handling optional fields","Using Partial<T> helps with type safety when dealing with potentially incomplete objects","Type guards should be comprehensive to ensure runtime safety","Proper interface design reduces type checking complexity","Initialization of optional fields prevents undefined access errors"],"errorPattern":{"type":"typescript","message":"Object is possibly undefined or null when accessing properties","context":"type checking in filter functions"},"metadata":{"severity":"high","environment":{"os":"win32","nodeVersion":"18.x","dependencies":{"typescript":"^5.0.0"}},"successRate":0,"createdAt":"2025-02-13T13:29:05.864Z","updatedAt":"2025-02-13T13:29:05.864Z","frequency":0},"verificationSteps":[{"command":"Add type guard","expectedOutput":"Type-safe entity filtering","successIndicators":["if (e.entityType !== 'lesson') return false","const lessonEntity = e as Partial<LessonEntity>","lessonEntity.errorPattern !== undefined"]},{"command":"Add null checks","expectedOutput":"Safe property access","successIndicators":["Optional chaining used (?.)","Nullish coalescing used (??)","Default values provided"]},{"command":"Initialize optional fields","expectedOutput":"Proper field initialization","successIndicators":["metadata initialized if undefined","Default values set for required fields","Type assertions properly used"]},{"command":"Test type safety","expectedOutput":"No TypeScript errors","successIndicators":["No type errors in IDE","Successful compilation","Runtime errors prevented"]}]}
{"type":"entity","name":"FILE_SPLITTING_TEST_001","entityType":"lesson","observations":["Testing file splitting functionality","Verifying file size limits","Testing automatic file management"],"errorPattern":{"type":"test","message":"Testing file splitting and merging","context":"file management testing"},"metadata":{"severity":"low","environment":{"os":"win32","nodeVersion":"18.x"},"createdAt":"2025-02-13T14:21:06.214Z","updatedAt":"2025-02-13T14:21:06.214Z","frequency":0,"successRate":0},"verificationSteps":[{"command":"Check file size","expectedOutput":"File size within limits","successIndicators":["Size < 1000 lines","Proper file splitting"]}]}
{"type":"entity","name":"MEMORY_SYSTEM_TEST_002","entityType":"lesson","observations":["Testing memory system functionality after rebuild","Verifying lesson creation and retrieval","Testing success rate updates"],"errorPattern":{"type":"test","message":"Testing memory system operations after rebuild","context":"memory system testing"},"metadata":{"severity":"low","environment":{"os":"win32","nodeVersion":"18.x"},"createdAt":"2025-02-13T14:45:33.900Z","updatedAt":"2025-02-13T14:45:54.868Z","frequency":1,"successRate":1},"verificationSteps":[{"command":"Create lesson","expectedOutput":"Lesson created successfully","successIndicators":["Lesson stored in memory","Metadata initialized correctly"]},{"command":"Update success rate","expectedOutput":"Success rate updated","successIndicators":["Rate calculation correct","Frequency incremented"]}]}